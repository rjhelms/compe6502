FEATURES {
    STARTADDRESS: default = $0600;
}

SYMBOLS {
    __LOADADDR__: type = import;
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
    __RAM_END__: type = weak, value = $8000;
}

MEMORY {
    ZP:       start =   $20, size =   $E0, type   = rw,  define  = yes;
    LOADADDR: start =  %S - 2, size = $0002, file = "%O.hdr";
    RAM:      start =    %S, size = __RAM_END__ - %S - __STACKSIZE__, define = yes, file=%O;
    ROM:      start = $C000, size = $4000;
}

SEGMENTS {
    ZEROPAGE: load = ZP,             type = zp,  define   = yes;
    LOADADDR: load = LOADADDR,      type = ro;
    STARTUP:  load = RAM,            type = ro,  optional = yes;
    ONCE:     load = RAM,            type = ro,  optional = yes;
    CODE:     load = RAM,            type = ro;
    DATA:     load = RAM,            type = rw,  define   = yes;
    RODATA:   load = RAM,            type = ro;
    BSS:      load = RAM,            type = bss, define   = yes;
    HEAP:     load = RAM,            type = bss, optional = yes;
    # VECTORS:  load = ROM,            type = ro,  start    = $FFFA;
}

FEATURES {
    CONDES:   segment = STARTUP,
              type    = constructor,
              label   = __CONSTRUCTOR_TABLE__,
              count   = __CONSTRUCTOR_COUNT__;
    CONDES:   segment = STARTUP,
              type    = destructor,
              label   = __DESTRUCTOR_TABLE__,
              count   = __DESTRUCTOR_COUNT__;
}
