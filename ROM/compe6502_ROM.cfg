SYMBOLS {
    __STACKSIZE__: type = weak, value = $0100; # 1 page stack
}

MEMORY {
    ZP:     start =    $0, size =  $100, type   = rw,  define  = yes;
    LORAM:  start =  $200, size =  $400, define = yes;
    RAM:    start =  $600, size = $7A00, define = yes;
    LOROM:  start = $8000, size = $4000, fill   = yes, file = %O;
    ROM:    start = $C000, size = $4000, fill   = yes, file = %O;
    DUMMY:  start = $0000, size = $00FF, file   = "";
}

SEGMENTS {
    ZPBIOS:   load = ZP,             type = zp,  define   = yes;
    ZPMON:    load = ZP,             type = zp,  define   = yes;
    ZEROPAGE: load = ZP,             type = zp,  define   = yes;
    ZPBASIC:  load = ZP,             type = zp,  define   = yes;
    BSS:      load = LORAM,          type = bss, define   = yes;
    VECT_TAB: load = LORAM,          type = bss, optional = yes, start    = $0300;
    SD_BSS:   load = LORAM,          type = bss, optional = yes;
    SD_WORK:  load = LORAM,          type = bss, optional = yes, start    = $0400;
    HEADER:   load = ROM,            type = ro;
    INIT:     load = ROM,            type = ro;
    VECTORS:  load = ROM,            type = ro;
    KEYWORDS: load = ROM,            type = ro;
    ERROR:    load = ROM,            type = ro;
    CODE:     load = ROM,            type = ro;
    CHRGET:   load = ROM,            type = ro;
    EXTRA:    load = ROM,            type = ro;
    SYS:      load = ROM,            type = ro;
    RODATA:   load = ROM,            type = ro;
    MON:      load = ROM,            type = ro,  optional = yes, start    = $FC00;
    BIOS:     load = ROM,            type = ro,  start    = $FF00;
    BOOTVECT: load = ROM,            type = ro,  start    = $FFFA;
    DUMMY:    load = DUMMY; # don't include, needed for MSBASIC
}

FEATURES {
    CONDES:   segment = STARTUP,
              type    = constructor,
              label   = __CONSTRUCTOR_TABLE__,
              count   = __CONSTRUCTOR_COUNT__;
    CONDES:   segment = STARTUP,
              type    = destructor,
              label   = __DESTRUCTOR_TABLE__,
              count   = __DESTRUCTOR_COUNT__;
}
